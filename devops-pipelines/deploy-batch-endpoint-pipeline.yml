trigger: none
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

name: deploy-batch-endpoint-pipeline

variables: #To be updated 
    - template: ../config-infra-dev.yml
    - group: DevVars

pool:
  name: mdp-prd-we


stages:
  - stage: DeployBatchEndpointPipeline
    displayName: Deploy Batch Endpoint Pipeline
    jobs:
      - job: DeployBatchEndpoint
        timeoutInMinutes: 120
        steps:
          # 1. checkout your repo
          - checkout: self
    
                
          # 2. Install Azure ML extension
          - task: AzureCLI@2
            displayName: 'Install Azure ML Extension'
            inputs:
              azureSubscription: $(ado_service_connection_aml_ws)
              scriptType: ps
              scriptLocation: inlineScript
              inlineScript: |
                Write-Host "Installing Azure ML CLI extension... $(ado_service_connection_aml_ws)"
                az extension add --name ml --yes
                az extension list

          # 3. authenticate & “attach” the AML workspace
          - task: AzureCLI@2
            displayName: 'Configure AML workspace'
            inputs:
              azureSubscription: $(ado_service_connection_aml_ws)
              scriptType: ps
              scriptLocation: inlineScript
              inlineScript: |
                Write-Host "Configuring AML workspace: $(aml_workspace) in resource group: $(resource_group)"
                $subscription_id = az account show --query id -o tsv
                Write-Host "##vso[task.setvariable variable=AZURE_SUBSCRIPTION_ID]$subscription_id"
                Write-Host "##vso[task.setvariable variable=AZURE_RESOURCE_GROUP]$(resource_group)"
                Write-Host "##vso[task.setvariable variable=AZURE_ML_WORKSPACE]$(aml_workspace)"
                Write-Host "Azure ML environment variables set"

          #4. create or validate compute
          - task: AzureCLI@2
            displayName: 'Ensure AML batch cluster'
            inputs:
              azureSubscription: $(ado_service_connection_aml_ws)
              scriptType: ps
              scriptLocation: inlineScript
              inlineScript: |
                Write-Host "Checking for batch cluster 'batch-cluster'..."
                $exists = $false
                try {
                  if (az ml compute show --name batch-cluster --resource-group "$(resource_group)" --workspace-name "$(aml_workspace)" 2>$null) {
                    Write-Host "Batch cluster exists"
                    $exists = $true
                  }
                } catch { }
                if (-not $exists) {
                  Write-Host "Creating batch cluster 'batch-cluster'..."
                  # Create batch cluster
                  az ml compute create --name batch-cluster --type amlcompute --size Standard_DS3_v2 --min-instances 0 --max-instances 5 --tier dedicated --resource-group "$(resource_group)" --workspace-name "$(aml_workspace)"
                }
              workingDirectory: 'ml-pipelines/cli'

          # 5. Create or update the Batch Endpoint
          - task: AzureCLI@2
            displayName: 'Create or update Batch Endpoint'
            inputs:
              azureSubscription: $(ado_service_connection_aml_ws)
              scriptType: ps
              scriptLocation: inlineScript
              inlineScript: |
                Write-Host "Creating Batch Endpoint..."
                az ml batch-endpoint create --file deploy/batch/batch-endpoint.yml --resource-group "$(resource_group)" --workspace-name "$(aml_workspace)"
                Write-Host "Batch Endpoint created."
              workingDirectory: 'ml-pipelines/cli'
                
          # 6. Create Batch Deployment
          - task: AzureCLI@2
            displayName: 'Create Batch Deployment'
            inputs:
              azureSubscription: $(ado_service_connection_aml_ws)
              scriptType: ps
              scriptLocation: inlineScript
              inlineScript: |
                Write-Host "Creating Batch deployment"
                az ml batch-deployment create --file deploy/batch/batch-deployment.yml --set-default --resource-group "$(resource_group)" --workspace-name "$(aml_workspace)
              workingDirectory: 'ml-pipelines/cli'


         